Assignment 1

Date : 21.02.2022
----------------------------
1.Check the given number is EVEN or ODD. 

public class EvenOdd {

    public static void main(String[] args) {

        Scanner reader = new Scanner(System.in);

        System.out.print("Enter a number: ");
        int num = reader.nextInt();

        if(num % 2 == 0)
            System.out.println(num + " is even");
        else
            System.out.println(num + " is odd");
    }
}

2.Write a Java Program to find the Factorial of given number. 

class FactorialExample{  
 public static void main(String args[]){  
  int i,fact=1;  
  int number=5;  
  for(i=1;i<=number;i++){    
      fact=fact*i;    
  }    
  System.out.println("Factorial of "+number+" is: "+fact);    
 }  
}  

3.Find the Factorial of a number using Recursion. 

class FactorialExample2{  
 static int factorial(int n){    
  if (n == 0)    
    return 1;    
  else    
    return(n * factorial(n-1));    
 }    
 public static void main(String args[]){  
  int i,fact=1;  
  int number=4;   
  fact = factorial(number);   
  System.out.println("Factorial of "+number+" is: "+fact);    
 }  
}

4.Swap two numbers without using third variable approach 1. 

class Swap   
{  
    public static void main(String a[])   
    {   
        System.out.println("Enter the value of x and y");  
        Scanner sc = new Scanner(System.in);  
       
        int x = sc.nextInt();  
        int y = sc.nextInt();  
        System.out.println("before swapping numbers: "+x +" "+ y);  
       
        x = x + y;   
        y = x - y;   
        x = x - y;   
        System.out.println("After swapping: "+x +"  " + y);   
    }   
}  
5.Swap two numbers without using third variable approach 2. 

class Swap2 {
    public static void main(String[] args)
    {
        int x = 10;
        int y = 5;
 
        // Code to swap 'x' and 'y'
        x = x * y; // x now becomes 50
        y = x / y; // y becomes 10
        x = x / y; // x becomes 5
 
        System.out.println("After swaping:"
                           + " x = " + x + ", y = " + y);
    }
}
6.Swap two numbers without using third variable approach 3. 

public class Without {
 
    public static void main(String a[])
    {
        int x = 10;
        int y = 5;
        x = x ^ y; 
        y = x ^ y; 
        x = x ^ y; 
 
        System.out.println("After swap: x = "
                           + x + ", y = " + y);
    }
}
7.How to check the given number is Positive or Negative in Java? 

class Posneg {
 
    
    static String checkPosNeg(int x)
    {
 
        // checks the number is greater than 0 or not
        if (x > 0)
            return "Positive";
 
        else if (x < 0)
            return "Negative";
 
        else
            return "zero";
    }
 
   
    public static void main(String[] args)
    {
        int firstNumber = 912;
        System.out.println(firstNumber + " is "
                           + checkPosNeg(firstNumber));
    }

8.Write a Java Program to find whether given number is Leap year or NOT? 

public class LeapYear {
   public static void main(String[] args){
      int year;
      System.out.println("Enter an Year :: ");
      Scanner sc = new Scanner(System.in);
      year = sc.nextInt();

      if (((year % 4 == 0) && (year % 100!= 0)) || (year%400 == 0))
         System.out.println("Specified year is a leap year");
      else
         System.out.println("Specified year is not a leap year");
   }
}
9.Write a Java Program to Print 1 To 10 Without Using Loop. 

public class Print {

    public static void printWithoutLoop(int n) {
        if (n <= 10) {
            System.out.println(n);
            printWithoutLoop(n + 1);
        }
    }

    public static void main(String[] args){
        Print.printWithoutLoop(1);
    }
}


10.Write a Java Program to print the digits of a Given Number. 

class PrintDigits {
 
    public static void main(String[] args)
    {
        
        int number = 110102;
 
        String string_number = Integer.toString(number);
 
        
        for (int i = 0; i < string_number.length(); i++) {
 
           
            System.out.println(string_number.charAt(i));
        }
    }
}
11.Write a Java Program to print all the Factors of the Given number. 

public class Main {

  public static void main(String[] args) {

    int number = 60;

    System.out.print("Factors of " + number + " are: ");

  
    for (int i = 1; i <= number; ++i) {

   
      if (number % i == 0) {
        System.out.print(i + " ");
      }
    }
  }
}

12.Write a Java Program to find sum of the digits of a given number. 

public class SumOfDigitsExample1   
{  
public static void main(String args[])  
{  
int number, digit, sum = 0;  
Scanner sc = new Scanner(System.in);  
System.out.print("Enter the number: ");  
number = sc.nextInt();  
while(number > 0)  
{  
    
digit = number % 10;  
 
sum = sum + digit;  

number = number / 10;  
}  
//prints the result  
System.out.println("Sum of Digits: "+sum);  
}  
}  


13.Write a Java Program to find the smallest of 3 numbers (a,b,c) without using < or > symbol? 

public class SmallestNumberExample
{  
public static void main(String[] args)   
{  
int a, b, c, smallest, temp;  
 
Scanner sc = new Scanner(System.in);  

System.out.println("Enter the first number:");  
a = sc.nextInt();  
System.out.println("Enter the second number:");  
b = sc.nextInt();  
System.out.println("Enter the third number:");  
c = sc.nextInt();  
temp=a<b?a:b;  

smallest=c<temp?c:temp;  
 
System.out.println("The smallest number is: "+smallest);  
}  
}  
14.How to add two numbers without using the arithmetic operators in Java? 

class GFG
{
    static int Add(int x, int y)
    {
        // Iterate till there is no carry
        while (y != 0)
        {
          
            int carry = x & y;
            x = x ^ y;
            y = carry << 1;
        }
        return x;
    }
     
    public static void main(String arg[])
    {
        System.out.println(Add(15, 32));
    }
}
 


15.Write a java program to Reverse a given number. 


public class ReverseNumber 
{  
public static void main(String[] args)   
{  
int number = 987654, reverse = 0;  
while(number != 0)   
{  
int remainder = number % 10;  
reverse = reverse * 10 + remainder;  
number = number/10;  
}  
System.out.println("The reverse of the given number is: " + reverse);  
}  
}
16.Write a Java Program to find GCD of two given numbers. 

public class FindGCDExample1   
{  
public static void main(String[] args)   
{  

int x = 12, y = 8, gcd = 1;  
 
for(int i = 1; i <= x && i <= y; i++)  
{     
if(x%i==0 && y%i==0)  

gcd = i;  
}  

System.out.printf("GCD of %d and %d is: %d", x, y, gcd);  
}  
}
17.Write a java program to LCM of TWO given number. 

public class LcmExample1  
{  
public static void main(String args[])   
{  
int a = 12, b = 9, gcd = 1;  
 
for(int i = 1; i <= a && i <= b; ++i)   
{  

if(a % i == 0 && b % i == 0)  

gcd = i;  
}   
int lcm = (a * b) / gcd;  

System.out.printf("The LCM of %d and %d is %d.", a, b, lcm);  
}  
}  
18.Write a java program to LCM of TWO given number using Prime Factors method. 


19.Check whether the Given Number is a Palindrome or NOT. 

class PalindromeExample{  
 public static void main(String args[]){  
  int r,sum=0,temp;    
  int n=454;
  
  temp=n;    
  while(n>0){    
   r=n%10;   
   sum=(sum*10)+r;    
   n=n/10;    
  }    
  if(temp==sum)    
   System.out.println("palindrome number ");    
  else    
   System.out.println("not palindrome");    
}  
} 
20.Write a Java Program to print all the Prime Factors of the Given Number.

class PrimeFactors {
   
    public static void primeFactors(int n)
    {
        while (n % 2 == 0) {
            System.out.print(2 + " ");
            n /= 2;
        }
 
      
        for (int i = 3; i <= Math.sqrt(n); i += 2) {
           
            while (n % i == 0) {
                System.out.print(i + " ");
                n /= i;
            }
        }
 
        if (n > 2)
System.out.print(n);
    }
 
    public static void main(String[] args)
    {
        int n = 315;
        primeFactors(n);
    }
}